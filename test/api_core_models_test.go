/*
ArchiveBox API

Testing CoreModelsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/flowline-io/sdk-archivebox-api"
)

func Test_openapi_CoreModelsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CoreModelsAPIService ApiV1CoreGetAny", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var abid string

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetAny(context.Background(), abid).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetArchiveresult", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var archiveresultId string

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetArchiveresult(context.Background(), archiveresultId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetArchiveresults", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetArchiveresults(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetSnapshot", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var snapshotId string

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetSnapshot(context.Background(), snapshotId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetSnapshots", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetSnapshots(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetTag", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var tagId string

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetTag(context.Background(), tagId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CoreModelsAPIService ApiV1CoreGetTags", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CoreModelsAPI.ApiV1CoreGetTags(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
