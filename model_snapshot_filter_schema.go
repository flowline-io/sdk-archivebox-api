/*
ArchiveBox API

 <h3>Welcome to your ArchiveBox server's REST API <code>[v1 ALPHA]</code> homepage!</h3> <br/> <i><b>WARNING: This API is still in an early development stage and may change!</b></i> <br/> <ul> <li>‚¨ÖÔ∏è Manage your server: <a href=\"/admin/api/\"><b>Setup API Keys</b></a>, <a href=\"/admin/\">Go to your Server Admin UI</a>, <a href=\"/\">Go to your Snapshots list</a>  <li>üí¨ Ask questions and get help here: <a href=\"https://zulip.archivebox.io\">ArchiveBox Chat Forum</a></li> <li>üêû Report API bugs here: <a href=\"https://github.com/ArchiveBox/ArchiveBox/issues\">Github Issues</a></li> <li>üìö ArchiveBox Documentation: <a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki\">Github Wiki</a></li> <li>üìú See the API source code: <a href=\"https://github.com/ArchiveBox/ArchiveBox/blob/dev/archivebox/api\"><code>archivebox/api/</code></a></li> </ul> <small>Served by ArchiveBox v0.8.5rc50 (<a href=\"https://github.com/ArchiveBox/ArchiveBox/commit/1dff8bae4043efb678c1a6fb517dfa7e7a211150\"><code>1dff8bae</code></a>), API powered by <a href=\"https://django-ninja.dev/\"><code>django-ninja</code></a>.</small> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the SnapshotFilterSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotFilterSchema{}

// SnapshotFilterSchema struct for SnapshotFilterSchema
type SnapshotFilterSchema struct {
	Id NullableString `json:"id,omitempty"`
	Abid NullableString `json:"abid,omitempty"`
	CreatedById *string `json:"created_by_id,omitempty"`
	CreatedByUsername *string `json:"created_by_username,omitempty"`
	CreatedAtGte *time.Time `json:"created_at__gte,omitempty"`
	CreatedAtLt *time.Time `json:"created_at__lt,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	ModifiedAt *time.Time `json:"modified_at,omitempty"`
	ModifiedAtGte *time.Time `json:"modified_at__gte,omitempty"`
	ModifiedAtLt *time.Time `json:"modified_at__lt,omitempty"`
	Search NullableString `json:"search,omitempty"`
	Url NullableString `json:"url,omitempty"`
	Tag NullableString `json:"tag,omitempty"`
	Title NullableString `json:"title,omitempty"`
	Timestamp NullableString `json:"timestamp,omitempty"`
	BookmarkedAtGte NullableTime `json:"bookmarked_at__gte,omitempty"`
	BookmarkedAtLt NullableTime `json:"bookmarked_at__lt,omitempty"`
}

// NewSnapshotFilterSchema instantiates a new SnapshotFilterSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotFilterSchema() *SnapshotFilterSchema {
	this := SnapshotFilterSchema{}
	return &this
}

// NewSnapshotFilterSchemaWithDefaults instantiates a new SnapshotFilterSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotFilterSchemaWithDefaults() *SnapshotFilterSchema {
	this := SnapshotFilterSchema{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *SnapshotFilterSchema) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *SnapshotFilterSchema) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetId() {
	o.Id.Unset()
}

// GetAbid returns the Abid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetAbid() string {
	if o == nil || IsNil(o.Abid.Get()) {
		var ret string
		return ret
	}
	return *o.Abid.Get()
}

// GetAbidOk returns a tuple with the Abid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetAbidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Abid.Get(), o.Abid.IsSet()
}

// HasAbid returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasAbid() bool {
	if o != nil && o.Abid.IsSet() {
		return true
	}

	return false
}

// SetAbid gets a reference to the given NullableString and assigns it to the Abid field.
func (o *SnapshotFilterSchema) SetAbid(v string) {
	o.Abid.Set(&v)
}
// SetAbidNil sets the value for Abid to be an explicit nil
func (o *SnapshotFilterSchema) SetAbidNil() {
	o.Abid.Set(nil)
}

// UnsetAbid ensures that no value is present for Abid, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetAbid() {
	o.Abid.Unset()
}

// GetCreatedById returns the CreatedById field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetCreatedById() string {
	if o == nil || IsNil(o.CreatedById) {
		var ret string
		return ret
	}
	return *o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetCreatedByIdOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedById) {
		return nil, false
	}
	return o.CreatedById, true
}

// HasCreatedById returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasCreatedById() bool {
	if o != nil && !IsNil(o.CreatedById) {
		return true
	}

	return false
}

// SetCreatedById gets a reference to the given string and assigns it to the CreatedById field.
func (o *SnapshotFilterSchema) SetCreatedById(v string) {
	o.CreatedById = &v
}

// GetCreatedByUsername returns the CreatedByUsername field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetCreatedByUsername() string {
	if o == nil || IsNil(o.CreatedByUsername) {
		var ret string
		return ret
	}
	return *o.CreatedByUsername
}

// GetCreatedByUsernameOk returns a tuple with the CreatedByUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetCreatedByUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedByUsername) {
		return nil, false
	}
	return o.CreatedByUsername, true
}

// HasCreatedByUsername returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasCreatedByUsername() bool {
	if o != nil && !IsNil(o.CreatedByUsername) {
		return true
	}

	return false
}

// SetCreatedByUsername gets a reference to the given string and assigns it to the CreatedByUsername field.
func (o *SnapshotFilterSchema) SetCreatedByUsername(v string) {
	o.CreatedByUsername = &v
}

// GetCreatedAtGte returns the CreatedAtGte field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetCreatedAtGte() time.Time {
	if o == nil || IsNil(o.CreatedAtGte) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtGte
}

// GetCreatedAtGteOk returns a tuple with the CreatedAtGte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetCreatedAtGteOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtGte) {
		return nil, false
	}
	return o.CreatedAtGte, true
}

// HasCreatedAtGte returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasCreatedAtGte() bool {
	if o != nil && !IsNil(o.CreatedAtGte) {
		return true
	}

	return false
}

// SetCreatedAtGte gets a reference to the given time.Time and assigns it to the CreatedAtGte field.
func (o *SnapshotFilterSchema) SetCreatedAtGte(v time.Time) {
	o.CreatedAtGte = &v
}

// GetCreatedAtLt returns the CreatedAtLt field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetCreatedAtLt() time.Time {
	if o == nil || IsNil(o.CreatedAtLt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtLt
}

// GetCreatedAtLtOk returns a tuple with the CreatedAtLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetCreatedAtLtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAtLt) {
		return nil, false
	}
	return o.CreatedAtLt, true
}

// HasCreatedAtLt returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasCreatedAtLt() bool {
	if o != nil && !IsNil(o.CreatedAtLt) {
		return true
	}

	return false
}

// SetCreatedAtLt gets a reference to the given time.Time and assigns it to the CreatedAtLt field.
func (o *SnapshotFilterSchema) SetCreatedAtLt(v time.Time) {
	o.CreatedAtLt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SnapshotFilterSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetModifiedAt returns the ModifiedAt field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetModifiedAt() time.Time {
	if o == nil || IsNil(o.ModifiedAt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAt) {
		return nil, false
	}
	return o.ModifiedAt, true
}

// HasModifiedAt returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasModifiedAt() bool {
	if o != nil && !IsNil(o.ModifiedAt) {
		return true
	}

	return false
}

// SetModifiedAt gets a reference to the given time.Time and assigns it to the ModifiedAt field.
func (o *SnapshotFilterSchema) SetModifiedAt(v time.Time) {
	o.ModifiedAt = &v
}

// GetModifiedAtGte returns the ModifiedAtGte field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetModifiedAtGte() time.Time {
	if o == nil || IsNil(o.ModifiedAtGte) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAtGte
}

// GetModifiedAtGteOk returns a tuple with the ModifiedAtGte field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetModifiedAtGteOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAtGte) {
		return nil, false
	}
	return o.ModifiedAtGte, true
}

// HasModifiedAtGte returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasModifiedAtGte() bool {
	if o != nil && !IsNil(o.ModifiedAtGte) {
		return true
	}

	return false
}

// SetModifiedAtGte gets a reference to the given time.Time and assigns it to the ModifiedAtGte field.
func (o *SnapshotFilterSchema) SetModifiedAtGte(v time.Time) {
	o.ModifiedAtGte = &v
}

// GetModifiedAtLt returns the ModifiedAtLt field value if set, zero value otherwise.
func (o *SnapshotFilterSchema) GetModifiedAtLt() time.Time {
	if o == nil || IsNil(o.ModifiedAtLt) {
		var ret time.Time
		return ret
	}
	return *o.ModifiedAtLt
}

// GetModifiedAtLtOk returns a tuple with the ModifiedAtLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotFilterSchema) GetModifiedAtLtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ModifiedAtLt) {
		return nil, false
	}
	return o.ModifiedAtLt, true
}

// HasModifiedAtLt returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasModifiedAtLt() bool {
	if o != nil && !IsNil(o.ModifiedAtLt) {
		return true
	}

	return false
}

// SetModifiedAtLt gets a reference to the given time.Time and assigns it to the ModifiedAtLt field.
func (o *SnapshotFilterSchema) SetModifiedAtLt(v time.Time) {
	o.ModifiedAtLt = &v
}

// GetSearch returns the Search field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetSearch() string {
	if o == nil || IsNil(o.Search.Get()) {
		var ret string
		return ret
	}
	return *o.Search.Get()
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetSearchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Search.Get(), o.Search.IsSet()
}

// HasSearch returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasSearch() bool {
	if o != nil && o.Search.IsSet() {
		return true
	}

	return false
}

// SetSearch gets a reference to the given NullableString and assigns it to the Search field.
func (o *SnapshotFilterSchema) SetSearch(v string) {
	o.Search.Set(&v)
}
// SetSearchNil sets the value for Search to be an explicit nil
func (o *SnapshotFilterSchema) SetSearchNil() {
	o.Search.Set(nil)
}

// UnsetSearch ensures that no value is present for Search, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetSearch() {
	o.Search.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetUrl() string {
	if o == nil || IsNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *SnapshotFilterSchema) SetUrl(v string) {
	o.Url.Set(&v)
}
// SetUrlNil sets the value for Url to be an explicit nil
func (o *SnapshotFilterSchema) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetUrl() {
	o.Url.Unset()
}

// GetTag returns the Tag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetTag() string {
	if o == nil || IsNil(o.Tag.Get()) {
		var ret string
		return ret
	}
	return *o.Tag.Get()
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tag.Get(), o.Tag.IsSet()
}

// HasTag returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasTag() bool {
	if o != nil && o.Tag.IsSet() {
		return true
	}

	return false
}

// SetTag gets a reference to the given NullableString and assigns it to the Tag field.
func (o *SnapshotFilterSchema) SetTag(v string) {
	o.Tag.Set(&v)
}
// SetTagNil sets the value for Tag to be an explicit nil
func (o *SnapshotFilterSchema) SetTagNil() {
	o.Tag.Set(nil)
}

// UnsetTag ensures that no value is present for Tag, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetTag() {
	o.Tag.Unset()
}

// GetTitle returns the Title field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetTitle() string {
	if o == nil || IsNil(o.Title.Get()) {
		var ret string
		return ret
	}
	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// HasTitle returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasTitle() bool {
	if o != nil && o.Title.IsSet() {
		return true
	}

	return false
}

// SetTitle gets a reference to the given NullableString and assigns it to the Title field.
func (o *SnapshotFilterSchema) SetTitle(v string) {
	o.Title.Set(&v)
}
// SetTitleNil sets the value for Title to be an explicit nil
func (o *SnapshotFilterSchema) SetTitleNil() {
	o.Title.Set(nil)
}

// UnsetTitle ensures that no value is present for Title, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetTitle() {
	o.Title.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetTimestamp() string {
	if o == nil || IsNil(o.Timestamp.Get()) {
		var ret string
		return ret
	}
	return *o.Timestamp.Get()
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timestamp.Get(), o.Timestamp.IsSet()
}

// HasTimestamp returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasTimestamp() bool {
	if o != nil && o.Timestamp.IsSet() {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given NullableString and assigns it to the Timestamp field.
func (o *SnapshotFilterSchema) SetTimestamp(v string) {
	o.Timestamp.Set(&v)
}
// SetTimestampNil sets the value for Timestamp to be an explicit nil
func (o *SnapshotFilterSchema) SetTimestampNil() {
	o.Timestamp.Set(nil)
}

// UnsetTimestamp ensures that no value is present for Timestamp, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetTimestamp() {
	o.Timestamp.Unset()
}

// GetBookmarkedAtGte returns the BookmarkedAtGte field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetBookmarkedAtGte() time.Time {
	if o == nil || IsNil(o.BookmarkedAtGte.Get()) {
		var ret time.Time
		return ret
	}
	return *o.BookmarkedAtGte.Get()
}

// GetBookmarkedAtGteOk returns a tuple with the BookmarkedAtGte field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetBookmarkedAtGteOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BookmarkedAtGte.Get(), o.BookmarkedAtGte.IsSet()
}

// HasBookmarkedAtGte returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasBookmarkedAtGte() bool {
	if o != nil && o.BookmarkedAtGte.IsSet() {
		return true
	}

	return false
}

// SetBookmarkedAtGte gets a reference to the given NullableTime and assigns it to the BookmarkedAtGte field.
func (o *SnapshotFilterSchema) SetBookmarkedAtGte(v time.Time) {
	o.BookmarkedAtGte.Set(&v)
}
// SetBookmarkedAtGteNil sets the value for BookmarkedAtGte to be an explicit nil
func (o *SnapshotFilterSchema) SetBookmarkedAtGteNil() {
	o.BookmarkedAtGte.Set(nil)
}

// UnsetBookmarkedAtGte ensures that no value is present for BookmarkedAtGte, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetBookmarkedAtGte() {
	o.BookmarkedAtGte.Unset()
}

// GetBookmarkedAtLt returns the BookmarkedAtLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SnapshotFilterSchema) GetBookmarkedAtLt() time.Time {
	if o == nil || IsNil(o.BookmarkedAtLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.BookmarkedAtLt.Get()
}

// GetBookmarkedAtLtOk returns a tuple with the BookmarkedAtLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotFilterSchema) GetBookmarkedAtLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.BookmarkedAtLt.Get(), o.BookmarkedAtLt.IsSet()
}

// HasBookmarkedAtLt returns a boolean if a field has been set.
func (o *SnapshotFilterSchema) HasBookmarkedAtLt() bool {
	if o != nil && o.BookmarkedAtLt.IsSet() {
		return true
	}

	return false
}

// SetBookmarkedAtLt gets a reference to the given NullableTime and assigns it to the BookmarkedAtLt field.
func (o *SnapshotFilterSchema) SetBookmarkedAtLt(v time.Time) {
	o.BookmarkedAtLt.Set(&v)
}
// SetBookmarkedAtLtNil sets the value for BookmarkedAtLt to be an explicit nil
func (o *SnapshotFilterSchema) SetBookmarkedAtLtNil() {
	o.BookmarkedAtLt.Set(nil)
}

// UnsetBookmarkedAtLt ensures that no value is present for BookmarkedAtLt, not even an explicit nil
func (o *SnapshotFilterSchema) UnsetBookmarkedAtLt() {
	o.BookmarkedAtLt.Unset()
}

func (o SnapshotFilterSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotFilterSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Abid.IsSet() {
		toSerialize["abid"] = o.Abid.Get()
	}
	if !IsNil(o.CreatedById) {
		toSerialize["created_by_id"] = o.CreatedById
	}
	if !IsNil(o.CreatedByUsername) {
		toSerialize["created_by_username"] = o.CreatedByUsername
	}
	if !IsNil(o.CreatedAtGte) {
		toSerialize["created_at__gte"] = o.CreatedAtGte
	}
	if !IsNil(o.CreatedAtLt) {
		toSerialize["created_at__lt"] = o.CreatedAtLt
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.ModifiedAt) {
		toSerialize["modified_at"] = o.ModifiedAt
	}
	if !IsNil(o.ModifiedAtGte) {
		toSerialize["modified_at__gte"] = o.ModifiedAtGte
	}
	if !IsNil(o.ModifiedAtLt) {
		toSerialize["modified_at__lt"] = o.ModifiedAtLt
	}
	if o.Search.IsSet() {
		toSerialize["search"] = o.Search.Get()
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if o.Tag.IsSet() {
		toSerialize["tag"] = o.Tag.Get()
	}
	if o.Title.IsSet() {
		toSerialize["title"] = o.Title.Get()
	}
	if o.Timestamp.IsSet() {
		toSerialize["timestamp"] = o.Timestamp.Get()
	}
	if o.BookmarkedAtGte.IsSet() {
		toSerialize["bookmarked_at__gte"] = o.BookmarkedAtGte.Get()
	}
	if o.BookmarkedAtLt.IsSet() {
		toSerialize["bookmarked_at__lt"] = o.BookmarkedAtLt.Get()
	}
	return toSerialize, nil
}

type NullableSnapshotFilterSchema struct {
	value *SnapshotFilterSchema
	isSet bool
}

func (v NullableSnapshotFilterSchema) Get() *SnapshotFilterSchema {
	return v.value
}

func (v *NullableSnapshotFilterSchema) Set(val *SnapshotFilterSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotFilterSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotFilterSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotFilterSchema(val *SnapshotFilterSchema) *NullableSnapshotFilterSchema {
	return &NullableSnapshotFilterSchema{value: val, isSet: true}
}

func (v NullableSnapshotFilterSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotFilterSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


