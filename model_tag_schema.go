/*
ArchiveBox API

 <h3>Welcome to your ArchiveBox server's REST API <code>[v1 ALPHA]</code> homepage!</h3> <br/> <i><b>WARNING: This API is still in an early development stage and may change!</b></i> <br/> <ul> <li>‚¨ÖÔ∏è Manage your server: <a href=\"/admin/api/\"><b>Setup API Keys</b></a>, <a href=\"/admin/\">Go to your Server Admin UI</a>, <a href=\"/\">Go to your Snapshots list</a>  <li>üí¨ Ask questions and get help here: <a href=\"https://zulip.archivebox.io\">ArchiveBox Chat Forum</a></li> <li>üêû Report API bugs here: <a href=\"https://github.com/ArchiveBox/ArchiveBox/issues\">Github Issues</a></li> <li>üìö ArchiveBox Documentation: <a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki\">Github Wiki</a></li> <li>üìú See the API source code: <a href=\"https://github.com/ArchiveBox/ArchiveBox/blob/dev/archivebox/api\"><code>archivebox/api/</code></a></li> </ul> <small>Served by ArchiveBox v0.8.5rc50 (<a href=\"https://github.com/ArchiveBox/ArchiveBox/commit/1dff8bae4043efb678c1a6fb517dfa7e7a211150\"><code>1dff8bae</code></a>), API powered by <a href=\"https://django-ninja.dev/\"><code>django-ninja</code></a>.</small> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TagSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TagSchema{}

// TagSchema struct for TagSchema
type TagSchema struct {
	TYPE *string `json:"TYPE,omitempty"`
	Id string `json:"id"`
	Abid string `json:"abid"`
	ModifiedAt time.Time `json:"modified_at"`
	CreatedAt time.Time `json:"created_at"`
	CreatedById string `json:"created_by_id"`
	CreatedByUsername string `json:"created_by_username"`
	Name string `json:"name"`
	Slug string `json:"slug"`
	NumSnapshots int32 `json:"num_snapshots"`
	Snapshots []SnapshotSchema `json:"snapshots"`
}

type _TagSchema TagSchema

// NewTagSchema instantiates a new TagSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTagSchema(id string, abid string, modifiedAt time.Time, createdAt time.Time, createdById string, createdByUsername string, name string, slug string, numSnapshots int32, snapshots []SnapshotSchema) *TagSchema {
	this := TagSchema{}
	var tYPE string = "core.models.Tag"
	this.TYPE = &tYPE
	this.Id = id
	this.Abid = abid
	this.ModifiedAt = modifiedAt
	this.CreatedAt = createdAt
	this.CreatedById = createdById
	this.CreatedByUsername = createdByUsername
	this.Name = name
	this.Slug = slug
	this.NumSnapshots = numSnapshots
	this.Snapshots = snapshots
	return &this
}

// NewTagSchemaWithDefaults instantiates a new TagSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTagSchemaWithDefaults() *TagSchema {
	this := TagSchema{}
	var tYPE string = "core.models.Tag"
	this.TYPE = &tYPE
	return &this
}

// GetTYPE returns the TYPE field value if set, zero value otherwise.
func (o *TagSchema) GetTYPE() string {
	if o == nil || IsNil(o.TYPE) {
		var ret string
		return ret
	}
	return *o.TYPE
}

// GetTYPEOk returns a tuple with the TYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TagSchema) GetTYPEOk() (*string, bool) {
	if o == nil || IsNil(o.TYPE) {
		return nil, false
	}
	return o.TYPE, true
}

// HasTYPE returns a boolean if a field has been set.
func (o *TagSchema) HasTYPE() bool {
	if o != nil && !IsNil(o.TYPE) {
		return true
	}

	return false
}

// SetTYPE gets a reference to the given string and assigns it to the TYPE field.
func (o *TagSchema) SetTYPE(v string) {
	o.TYPE = &v
}

// GetId returns the Id field value
func (o *TagSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TagSchema) SetId(v string) {
	o.Id = v
}

// GetAbid returns the Abid field value
func (o *TagSchema) GetAbid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Abid
}

// GetAbidOk returns a tuple with the Abid field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetAbidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abid, true
}

// SetAbid sets field value
func (o *TagSchema) SetAbid(v string) {
	o.Abid = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *TagSchema) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *TagSchema) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TagSchema) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TagSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetCreatedById returns the CreatedById field value
func (o *TagSchema) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *TagSchema) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetCreatedByUsername returns the CreatedByUsername field value
func (o *TagSchema) GetCreatedByUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByUsername
}

// GetCreatedByUsernameOk returns a tuple with the CreatedByUsername field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetCreatedByUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUsername, true
}

// SetCreatedByUsername sets field value
func (o *TagSchema) SetCreatedByUsername(v string) {
	o.CreatedByUsername = v
}

// GetName returns the Name field value
func (o *TagSchema) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TagSchema) SetName(v string) {
	o.Name = v
}

// GetSlug returns the Slug field value
func (o *TagSchema) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *TagSchema) SetSlug(v string) {
	o.Slug = v
}

// GetNumSnapshots returns the NumSnapshots field value
func (o *TagSchema) GetNumSnapshots() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumSnapshots
}

// GetNumSnapshotsOk returns a tuple with the NumSnapshots field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetNumSnapshotsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumSnapshots, true
}

// SetNumSnapshots sets field value
func (o *TagSchema) SetNumSnapshots(v int32) {
	o.NumSnapshots = v
}

// GetSnapshots returns the Snapshots field value
func (o *TagSchema) GetSnapshots() []SnapshotSchema {
	if o == nil {
		var ret []SnapshotSchema
		return ret
	}

	return o.Snapshots
}

// GetSnapshotsOk returns a tuple with the Snapshots field value
// and a boolean to check if the value has been set.
func (o *TagSchema) GetSnapshotsOk() ([]SnapshotSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Snapshots, true
}

// SetSnapshots sets field value
func (o *TagSchema) SetSnapshots(v []SnapshotSchema) {
	o.Snapshots = v
}

func (o TagSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TagSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TYPE) {
		toSerialize["TYPE"] = o.TYPE
	}
	toSerialize["id"] = o.Id
	toSerialize["abid"] = o.Abid
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["created_by_id"] = o.CreatedById
	toSerialize["created_by_username"] = o.CreatedByUsername
	toSerialize["name"] = o.Name
	toSerialize["slug"] = o.Slug
	toSerialize["num_snapshots"] = o.NumSnapshots
	toSerialize["snapshots"] = o.Snapshots
	return toSerialize, nil
}

func (o *TagSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"abid",
		"modified_at",
		"created_at",
		"created_by_id",
		"created_by_username",
		"name",
		"slug",
		"num_snapshots",
		"snapshots",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTagSchema := _TagSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTagSchema)

	if err != nil {
		return err
	}

	*o = TagSchema(varTagSchema)

	return err
}

type NullableTagSchema struct {
	value *TagSchema
	isSet bool
}

func (v NullableTagSchema) Get() *TagSchema {
	return v.value
}

func (v *NullableTagSchema) Set(val *TagSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableTagSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableTagSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTagSchema(val *TagSchema) *NullableTagSchema {
	return &NullableTagSchema{value: val, isSet: true}
}

func (v NullableTagSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTagSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


