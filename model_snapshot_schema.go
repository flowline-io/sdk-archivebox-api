/*
ArchiveBox API

 <h3>Welcome to your ArchiveBox server's REST API <code>[v1 ALPHA]</code> homepage!</h3> <br/> <i><b>WARNING: This API is still in an early development stage and may change!</b></i> <br/> <ul> <li>‚¨ÖÔ∏è Manage your server: <a href=\"/admin/api/\"><b>Setup API Keys</b></a>, <a href=\"/admin/\">Go to your Server Admin UI</a>, <a href=\"/\">Go to your Snapshots list</a>  <li>üí¨ Ask questions and get help here: <a href=\"https://zulip.archivebox.io\">ArchiveBox Chat Forum</a></li> <li>üêû Report API bugs here: <a href=\"https://github.com/ArchiveBox/ArchiveBox/issues\">Github Issues</a></li> <li>üìö ArchiveBox Documentation: <a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki\">Github Wiki</a></li> <li>üìú See the API source code: <a href=\"https://github.com/ArchiveBox/ArchiveBox/blob/dev/archivebox/api\"><code>archivebox/api/</code></a></li> </ul> <small>Served by ArchiveBox v0.8.5rc50 (<a href=\"https://github.com/ArchiveBox/ArchiveBox/commit/1dff8bae4043efb678c1a6fb517dfa7e7a211150\"><code>1dff8bae</code></a>), API powered by <a href=\"https://django-ninja.dev/\"><code>django-ninja</code></a>.</small> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SnapshotSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SnapshotSchema{}

// SnapshotSchema struct for SnapshotSchema
type SnapshotSchema struct {
	TYPE *string `json:"TYPE,omitempty"`
	Id string `json:"id"`
	Abid string `json:"abid"`
	CreatedById string `json:"created_by_id"`
	CreatedByUsername string `json:"created_by_username"`
	CreatedAt time.Time `json:"created_at"`
	ModifiedAt time.Time `json:"modified_at"`
	BookmarkedAt time.Time `json:"bookmarked_at"`
	DownloadedAt NullableTime `json:"downloaded_at"`
	Url string `json:"url"`
	Tags []string `json:"tags"`
	Title NullableString `json:"title"`
	Timestamp string `json:"timestamp"`
	ArchivePath string `json:"archive_path"`
	NumArchiveresults int32 `json:"num_archiveresults"`
	Archiveresults []MinimalArchiveResultSchema `json:"archiveresults"`
}

type _SnapshotSchema SnapshotSchema

// NewSnapshotSchema instantiates a new SnapshotSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotSchema(id string, abid string, createdById string, createdByUsername string, createdAt time.Time, modifiedAt time.Time, bookmarkedAt time.Time, downloadedAt NullableTime, url string, tags []string, title NullableString, timestamp string, archivePath string, numArchiveresults int32, archiveresults []MinimalArchiveResultSchema) *SnapshotSchema {
	this := SnapshotSchema{}
	var tYPE string = "core.models.Snapshot"
	this.TYPE = &tYPE
	this.Id = id
	this.Abid = abid
	this.CreatedById = createdById
	this.CreatedByUsername = createdByUsername
	this.CreatedAt = createdAt
	this.ModifiedAt = modifiedAt
	this.BookmarkedAt = bookmarkedAt
	this.DownloadedAt = downloadedAt
	this.Url = url
	this.Tags = tags
	this.Title = title
	this.Timestamp = timestamp
	this.ArchivePath = archivePath
	this.NumArchiveresults = numArchiveresults
	this.Archiveresults = archiveresults
	return &this
}

// NewSnapshotSchemaWithDefaults instantiates a new SnapshotSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotSchemaWithDefaults() *SnapshotSchema {
	this := SnapshotSchema{}
	var tYPE string = "core.models.Snapshot"
	this.TYPE = &tYPE
	return &this
}

// GetTYPE returns the TYPE field value if set, zero value otherwise.
func (o *SnapshotSchema) GetTYPE() string {
	if o == nil || IsNil(o.TYPE) {
		var ret string
		return ret
	}
	return *o.TYPE
}

// GetTYPEOk returns a tuple with the TYPE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetTYPEOk() (*string, bool) {
	if o == nil || IsNil(o.TYPE) {
		return nil, false
	}
	return o.TYPE, true
}

// HasTYPE returns a boolean if a field has been set.
func (o *SnapshotSchema) HasTYPE() bool {
	if o != nil && !IsNil(o.TYPE) {
		return true
	}

	return false
}

// SetTYPE gets a reference to the given string and assigns it to the TYPE field.
func (o *SnapshotSchema) SetTYPE(v string) {
	o.TYPE = &v
}

// GetId returns the Id field value
func (o *SnapshotSchema) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SnapshotSchema) SetId(v string) {
	o.Id = v
}

// GetAbid returns the Abid field value
func (o *SnapshotSchema) GetAbid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Abid
}

// GetAbidOk returns a tuple with the Abid field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetAbidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Abid, true
}

// SetAbid sets field value
func (o *SnapshotSchema) SetAbid(v string) {
	o.Abid = v
}

// GetCreatedById returns the CreatedById field value
func (o *SnapshotSchema) GetCreatedById() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedById
}

// GetCreatedByIdOk returns a tuple with the CreatedById field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetCreatedByIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedById, true
}

// SetCreatedById sets field value
func (o *SnapshotSchema) SetCreatedById(v string) {
	o.CreatedById = v
}

// GetCreatedByUsername returns the CreatedByUsername field value
func (o *SnapshotSchema) GetCreatedByUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedByUsername
}

// GetCreatedByUsernameOk returns a tuple with the CreatedByUsername field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetCreatedByUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedByUsername, true
}

// SetCreatedByUsername sets field value
func (o *SnapshotSchema) SetCreatedByUsername(v string) {
	o.CreatedByUsername = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *SnapshotSchema) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *SnapshotSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetModifiedAt returns the ModifiedAt field value
func (o *SnapshotSchema) GetModifiedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ModifiedAt
}

// GetModifiedAtOk returns a tuple with the ModifiedAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetModifiedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ModifiedAt, true
}

// SetModifiedAt sets field value
func (o *SnapshotSchema) SetModifiedAt(v time.Time) {
	o.ModifiedAt = v
}

// GetBookmarkedAt returns the BookmarkedAt field value
func (o *SnapshotSchema) GetBookmarkedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.BookmarkedAt
}

// GetBookmarkedAtOk returns a tuple with the BookmarkedAt field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetBookmarkedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BookmarkedAt, true
}

// SetBookmarkedAt sets field value
func (o *SnapshotSchema) SetBookmarkedAt(v time.Time) {
	o.BookmarkedAt = v
}

// GetDownloadedAt returns the DownloadedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *SnapshotSchema) GetDownloadedAt() time.Time {
	if o == nil || o.DownloadedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DownloadedAt.Get()
}

// GetDownloadedAtOk returns a tuple with the DownloadedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotSchema) GetDownloadedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DownloadedAt.Get(), o.DownloadedAt.IsSet()
}

// SetDownloadedAt sets field value
func (o *SnapshotSchema) SetDownloadedAt(v time.Time) {
	o.DownloadedAt.Set(&v)
}

// GetUrl returns the Url field value
func (o *SnapshotSchema) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SnapshotSchema) SetUrl(v string) {
	o.Url = v
}

// GetTags returns the Tags field value
func (o *SnapshotSchema) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *SnapshotSchema) SetTags(v []string) {
	o.Tags = v
}

// GetTitle returns the Title field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SnapshotSchema) GetTitle() string {
	if o == nil || o.Title.Get() == nil {
		var ret string
		return ret
	}

	return *o.Title.Get()
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SnapshotSchema) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Title.Get(), o.Title.IsSet()
}

// SetTitle sets field value
func (o *SnapshotSchema) SetTitle(v string) {
	o.Title.Set(&v)
}

// GetTimestamp returns the Timestamp field value
func (o *SnapshotSchema) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *SnapshotSchema) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetArchivePath returns the ArchivePath field value
func (o *SnapshotSchema) GetArchivePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ArchivePath
}

// GetArchivePathOk returns a tuple with the ArchivePath field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetArchivePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchivePath, true
}

// SetArchivePath sets field value
func (o *SnapshotSchema) SetArchivePath(v string) {
	o.ArchivePath = v
}

// GetNumArchiveresults returns the NumArchiveresults field value
func (o *SnapshotSchema) GetNumArchiveresults() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumArchiveresults
}

// GetNumArchiveresultsOk returns a tuple with the NumArchiveresults field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetNumArchiveresultsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumArchiveresults, true
}

// SetNumArchiveresults sets field value
func (o *SnapshotSchema) SetNumArchiveresults(v int32) {
	o.NumArchiveresults = v
}

// GetArchiveresults returns the Archiveresults field value
func (o *SnapshotSchema) GetArchiveresults() []MinimalArchiveResultSchema {
	if o == nil {
		var ret []MinimalArchiveResultSchema
		return ret
	}

	return o.Archiveresults
}

// GetArchiveresultsOk returns a tuple with the Archiveresults field value
// and a boolean to check if the value has been set.
func (o *SnapshotSchema) GetArchiveresultsOk() ([]MinimalArchiveResultSchema, bool) {
	if o == nil {
		return nil, false
	}
	return o.Archiveresults, true
}

// SetArchiveresults sets field value
func (o *SnapshotSchema) SetArchiveresults(v []MinimalArchiveResultSchema) {
	o.Archiveresults = v
}

func (o SnapshotSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SnapshotSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TYPE) {
		toSerialize["TYPE"] = o.TYPE
	}
	toSerialize["id"] = o.Id
	toSerialize["abid"] = o.Abid
	toSerialize["created_by_id"] = o.CreatedById
	toSerialize["created_by_username"] = o.CreatedByUsername
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["modified_at"] = o.ModifiedAt
	toSerialize["bookmarked_at"] = o.BookmarkedAt
	toSerialize["downloaded_at"] = o.DownloadedAt.Get()
	toSerialize["url"] = o.Url
	toSerialize["tags"] = o.Tags
	toSerialize["title"] = o.Title.Get()
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["archive_path"] = o.ArchivePath
	toSerialize["num_archiveresults"] = o.NumArchiveresults
	toSerialize["archiveresults"] = o.Archiveresults
	return toSerialize, nil
}

func (o *SnapshotSchema) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"abid",
		"created_by_id",
		"created_by_username",
		"created_at",
		"modified_at",
		"bookmarked_at",
		"downloaded_at",
		"url",
		"tags",
		"title",
		"timestamp",
		"archive_path",
		"num_archiveresults",
		"archiveresults",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSnapshotSchema := _SnapshotSchema{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSnapshotSchema)

	if err != nil {
		return err
	}

	*o = SnapshotSchema(varSnapshotSchema)

	return err
}

type NullableSnapshotSchema struct {
	value *SnapshotSchema
	isSet bool
}

func (v NullableSnapshotSchema) Get() *SnapshotSchema {
	return v.value
}

func (v *NullableSnapshotSchema) Set(val *SnapshotSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotSchema(val *SnapshotSchema) *NullableSnapshotSchema {
	return &NullableSnapshotSchema{value: val, isSet: true}
}

func (v NullableSnapshotSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


