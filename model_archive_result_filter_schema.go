/*
ArchiveBox API

 <h3>Welcome to your ArchiveBox server's REST API <code>[v1 ALPHA]</code> homepage!</h3> <br/> <i><b>WARNING: This API is still in an early development stage and may change!</b></i> <br/> <ul> <li>‚¨ÖÔ∏è Manage your server: <a href=\"/admin/api/\"><b>Setup API Keys</b></a>, <a href=\"/admin/\">Go to your Server Admin UI</a>, <a href=\"/\">Go to your Snapshots list</a>  <li>üí¨ Ask questions and get help here: <a href=\"https://zulip.archivebox.io\">ArchiveBox Chat Forum</a></li> <li>üêû Report API bugs here: <a href=\"https://github.com/ArchiveBox/ArchiveBox/issues\">Github Issues</a></li> <li>üìö ArchiveBox Documentation: <a href=\"https://github.com/ArchiveBox/ArchiveBox/wiki\">Github Wiki</a></li> <li>üìú See the API source code: <a href=\"https://github.com/ArchiveBox/ArchiveBox/blob/dev/archivebox/api\"><code>archivebox/api/</code></a></li> </ul> <small>Served by ArchiveBox v0.8.5rc50 (<a href=\"https://github.com/ArchiveBox/ArchiveBox/commit/1dff8bae4043efb678c1a6fb517dfa7e7a211150\"><code>1dff8bae</code></a>), API powered by <a href=\"https://django-ninja.dev/\"><code>django-ninja</code></a>.</small> 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the ArchiveResultFilterSchema type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArchiveResultFilterSchema{}

// ArchiveResultFilterSchema struct for ArchiveResultFilterSchema
type ArchiveResultFilterSchema struct {
	Id NullableString `json:"id,omitempty"`
	Search NullableString `json:"search,omitempty"`
	SnapshotId NullableString `json:"snapshot_id,omitempty"`
	SnapshotUrl NullableString `json:"snapshot_url,omitempty"`
	SnapshotTag NullableString `json:"snapshot_tag,omitempty"`
	Status NullableString `json:"status,omitempty"`
	Output NullableString `json:"output,omitempty"`
	Extractor NullableString `json:"extractor,omitempty"`
	Cmd NullableString `json:"cmd,omitempty"`
	Pwd NullableString `json:"pwd,omitempty"`
	CmdVersion NullableString `json:"cmd_version,omitempty"`
	CreatedAt NullableTime `json:"created_at,omitempty"`
	CreatedAtGte NullableTime `json:"created_at__gte,omitempty"`
	CreatedAtLt NullableTime `json:"created_at__lt,omitempty"`
}

// NewArchiveResultFilterSchema instantiates a new ArchiveResultFilterSchema object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArchiveResultFilterSchema() *ArchiveResultFilterSchema {
	this := ArchiveResultFilterSchema{}
	return &this
}

// NewArchiveResultFilterSchemaWithDefaults instantiates a new ArchiveResultFilterSchema object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArchiveResultFilterSchemaWithDefaults() *ArchiveResultFilterSchema {
	this := ArchiveResultFilterSchema{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetId() string {
	if o == nil || IsNil(o.Id.Get()) {
		var ret string
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableString and assigns it to the Id field.
func (o *ArchiveResultFilterSchema) SetId(v string) {
	o.Id.Set(&v)
}
// SetIdNil sets the value for Id to be an explicit nil
func (o *ArchiveResultFilterSchema) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetId() {
	o.Id.Unset()
}

// GetSearch returns the Search field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetSearch() string {
	if o == nil || IsNil(o.Search.Get()) {
		var ret string
		return ret
	}
	return *o.Search.Get()
}

// GetSearchOk returns a tuple with the Search field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetSearchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Search.Get(), o.Search.IsSet()
}

// HasSearch returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasSearch() bool {
	if o != nil && o.Search.IsSet() {
		return true
	}

	return false
}

// SetSearch gets a reference to the given NullableString and assigns it to the Search field.
func (o *ArchiveResultFilterSchema) SetSearch(v string) {
	o.Search.Set(&v)
}
// SetSearchNil sets the value for Search to be an explicit nil
func (o *ArchiveResultFilterSchema) SetSearchNil() {
	o.Search.Set(nil)
}

// UnsetSearch ensures that no value is present for Search, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetSearch() {
	o.Search.Unset()
}

// GetSnapshotId returns the SnapshotId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetSnapshotId() string {
	if o == nil || IsNil(o.SnapshotId.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotId.Get()
}

// GetSnapshotIdOk returns a tuple with the SnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetSnapshotIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotId.Get(), o.SnapshotId.IsSet()
}

// HasSnapshotId returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasSnapshotId() bool {
	if o != nil && o.SnapshotId.IsSet() {
		return true
	}

	return false
}

// SetSnapshotId gets a reference to the given NullableString and assigns it to the SnapshotId field.
func (o *ArchiveResultFilterSchema) SetSnapshotId(v string) {
	o.SnapshotId.Set(&v)
}
// SetSnapshotIdNil sets the value for SnapshotId to be an explicit nil
func (o *ArchiveResultFilterSchema) SetSnapshotIdNil() {
	o.SnapshotId.Set(nil)
}

// UnsetSnapshotId ensures that no value is present for SnapshotId, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetSnapshotId() {
	o.SnapshotId.Unset()
}

// GetSnapshotUrl returns the SnapshotUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetSnapshotUrl() string {
	if o == nil || IsNil(o.SnapshotUrl.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotUrl.Get()
}

// GetSnapshotUrlOk returns a tuple with the SnapshotUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetSnapshotUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotUrl.Get(), o.SnapshotUrl.IsSet()
}

// HasSnapshotUrl returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasSnapshotUrl() bool {
	if o != nil && o.SnapshotUrl.IsSet() {
		return true
	}

	return false
}

// SetSnapshotUrl gets a reference to the given NullableString and assigns it to the SnapshotUrl field.
func (o *ArchiveResultFilterSchema) SetSnapshotUrl(v string) {
	o.SnapshotUrl.Set(&v)
}
// SetSnapshotUrlNil sets the value for SnapshotUrl to be an explicit nil
func (o *ArchiveResultFilterSchema) SetSnapshotUrlNil() {
	o.SnapshotUrl.Set(nil)
}

// UnsetSnapshotUrl ensures that no value is present for SnapshotUrl, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetSnapshotUrl() {
	o.SnapshotUrl.Unset()
}

// GetSnapshotTag returns the SnapshotTag field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetSnapshotTag() string {
	if o == nil || IsNil(o.SnapshotTag.Get()) {
		var ret string
		return ret
	}
	return *o.SnapshotTag.Get()
}

// GetSnapshotTagOk returns a tuple with the SnapshotTag field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetSnapshotTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SnapshotTag.Get(), o.SnapshotTag.IsSet()
}

// HasSnapshotTag returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasSnapshotTag() bool {
	if o != nil && o.SnapshotTag.IsSet() {
		return true
	}

	return false
}

// SetSnapshotTag gets a reference to the given NullableString and assigns it to the SnapshotTag field.
func (o *ArchiveResultFilterSchema) SetSnapshotTag(v string) {
	o.SnapshotTag.Set(&v)
}
// SetSnapshotTagNil sets the value for SnapshotTag to be an explicit nil
func (o *ArchiveResultFilterSchema) SetSnapshotTagNil() {
	o.SnapshotTag.Set(nil)
}

// UnsetSnapshotTag ensures that no value is present for SnapshotTag, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetSnapshotTag() {
	o.SnapshotTag.Unset()
}

// GetStatus returns the Status field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetStatus() string {
	if o == nil || IsNil(o.Status.Get()) {
		var ret string
		return ret
	}
	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// HasStatus returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasStatus() bool {
	if o != nil && o.Status.IsSet() {
		return true
	}

	return false
}

// SetStatus gets a reference to the given NullableString and assigns it to the Status field.
func (o *ArchiveResultFilterSchema) SetStatus(v string) {
	o.Status.Set(&v)
}
// SetStatusNil sets the value for Status to be an explicit nil
func (o *ArchiveResultFilterSchema) SetStatusNil() {
	o.Status.Set(nil)
}

// UnsetStatus ensures that no value is present for Status, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetStatus() {
	o.Status.Unset()
}

// GetOutput returns the Output field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetOutput() string {
	if o == nil || IsNil(o.Output.Get()) {
		var ret string
		return ret
	}
	return *o.Output.Get()
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetOutputOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Output.Get(), o.Output.IsSet()
}

// HasOutput returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasOutput() bool {
	if o != nil && o.Output.IsSet() {
		return true
	}

	return false
}

// SetOutput gets a reference to the given NullableString and assigns it to the Output field.
func (o *ArchiveResultFilterSchema) SetOutput(v string) {
	o.Output.Set(&v)
}
// SetOutputNil sets the value for Output to be an explicit nil
func (o *ArchiveResultFilterSchema) SetOutputNil() {
	o.Output.Set(nil)
}

// UnsetOutput ensures that no value is present for Output, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetOutput() {
	o.Output.Unset()
}

// GetExtractor returns the Extractor field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetExtractor() string {
	if o == nil || IsNil(o.Extractor.Get()) {
		var ret string
		return ret
	}
	return *o.Extractor.Get()
}

// GetExtractorOk returns a tuple with the Extractor field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetExtractorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Extractor.Get(), o.Extractor.IsSet()
}

// HasExtractor returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasExtractor() bool {
	if o != nil && o.Extractor.IsSet() {
		return true
	}

	return false
}

// SetExtractor gets a reference to the given NullableString and assigns it to the Extractor field.
func (o *ArchiveResultFilterSchema) SetExtractor(v string) {
	o.Extractor.Set(&v)
}
// SetExtractorNil sets the value for Extractor to be an explicit nil
func (o *ArchiveResultFilterSchema) SetExtractorNil() {
	o.Extractor.Set(nil)
}

// UnsetExtractor ensures that no value is present for Extractor, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetExtractor() {
	o.Extractor.Unset()
}

// GetCmd returns the Cmd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetCmd() string {
	if o == nil || IsNil(o.Cmd.Get()) {
		var ret string
		return ret
	}
	return *o.Cmd.Get()
}

// GetCmdOk returns a tuple with the Cmd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetCmdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Cmd.Get(), o.Cmd.IsSet()
}

// HasCmd returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasCmd() bool {
	if o != nil && o.Cmd.IsSet() {
		return true
	}

	return false
}

// SetCmd gets a reference to the given NullableString and assigns it to the Cmd field.
func (o *ArchiveResultFilterSchema) SetCmd(v string) {
	o.Cmd.Set(&v)
}
// SetCmdNil sets the value for Cmd to be an explicit nil
func (o *ArchiveResultFilterSchema) SetCmdNil() {
	o.Cmd.Set(nil)
}

// UnsetCmd ensures that no value is present for Cmd, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetCmd() {
	o.Cmd.Unset()
}

// GetPwd returns the Pwd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetPwd() string {
	if o == nil || IsNil(o.Pwd.Get()) {
		var ret string
		return ret
	}
	return *o.Pwd.Get()
}

// GetPwdOk returns a tuple with the Pwd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetPwdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pwd.Get(), o.Pwd.IsSet()
}

// HasPwd returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasPwd() bool {
	if o != nil && o.Pwd.IsSet() {
		return true
	}

	return false
}

// SetPwd gets a reference to the given NullableString and assigns it to the Pwd field.
func (o *ArchiveResultFilterSchema) SetPwd(v string) {
	o.Pwd.Set(&v)
}
// SetPwdNil sets the value for Pwd to be an explicit nil
func (o *ArchiveResultFilterSchema) SetPwdNil() {
	o.Pwd.Set(nil)
}

// UnsetPwd ensures that no value is present for Pwd, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetPwd() {
	o.Pwd.Unset()
}

// GetCmdVersion returns the CmdVersion field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetCmdVersion() string {
	if o == nil || IsNil(o.CmdVersion.Get()) {
		var ret string
		return ret
	}
	return *o.CmdVersion.Get()
}

// GetCmdVersionOk returns a tuple with the CmdVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetCmdVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CmdVersion.Get(), o.CmdVersion.IsSet()
}

// HasCmdVersion returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasCmdVersion() bool {
	if o != nil && o.CmdVersion.IsSet() {
		return true
	}

	return false
}

// SetCmdVersion gets a reference to the given NullableString and assigns it to the CmdVersion field.
func (o *ArchiveResultFilterSchema) SetCmdVersion(v string) {
	o.CmdVersion.Set(&v)
}
// SetCmdVersionNil sets the value for CmdVersion to be an explicit nil
func (o *ArchiveResultFilterSchema) SetCmdVersionNil() {
	o.CmdVersion.Set(nil)
}

// UnsetCmdVersion ensures that no value is present for CmdVersion, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetCmdVersion() {
	o.CmdVersion.Unset()
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasCreatedAt() bool {
	if o != nil && o.CreatedAt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given NullableTime and assigns it to the CreatedAt field.
func (o *ArchiveResultFilterSchema) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}
// SetCreatedAtNil sets the value for CreatedAt to be an explicit nil
func (o *ArchiveResultFilterSchema) SetCreatedAtNil() {
	o.CreatedAt.Set(nil)
}

// UnsetCreatedAt ensures that no value is present for CreatedAt, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetCreatedAt() {
	o.CreatedAt.Unset()
}

// GetCreatedAtGte returns the CreatedAtGte field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetCreatedAtGte() time.Time {
	if o == nil || IsNil(o.CreatedAtGte.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtGte.Get()
}

// GetCreatedAtGteOk returns a tuple with the CreatedAtGte field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetCreatedAtGteOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAtGte.Get(), o.CreatedAtGte.IsSet()
}

// HasCreatedAtGte returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasCreatedAtGte() bool {
	if o != nil && o.CreatedAtGte.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtGte gets a reference to the given NullableTime and assigns it to the CreatedAtGte field.
func (o *ArchiveResultFilterSchema) SetCreatedAtGte(v time.Time) {
	o.CreatedAtGte.Set(&v)
}
// SetCreatedAtGteNil sets the value for CreatedAtGte to be an explicit nil
func (o *ArchiveResultFilterSchema) SetCreatedAtGteNil() {
	o.CreatedAtGte.Set(nil)
}

// UnsetCreatedAtGte ensures that no value is present for CreatedAtGte, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetCreatedAtGte() {
	o.CreatedAtGte.Unset()
}

// GetCreatedAtLt returns the CreatedAtLt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ArchiveResultFilterSchema) GetCreatedAtLt() time.Time {
	if o == nil || IsNil(o.CreatedAtLt.Get()) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAtLt.Get()
}

// GetCreatedAtLtOk returns a tuple with the CreatedAtLt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ArchiveResultFilterSchema) GetCreatedAtLtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAtLt.Get(), o.CreatedAtLt.IsSet()
}

// HasCreatedAtLt returns a boolean if a field has been set.
func (o *ArchiveResultFilterSchema) HasCreatedAtLt() bool {
	if o != nil && o.CreatedAtLt.IsSet() {
		return true
	}

	return false
}

// SetCreatedAtLt gets a reference to the given NullableTime and assigns it to the CreatedAtLt field.
func (o *ArchiveResultFilterSchema) SetCreatedAtLt(v time.Time) {
	o.CreatedAtLt.Set(&v)
}
// SetCreatedAtLtNil sets the value for CreatedAtLt to be an explicit nil
func (o *ArchiveResultFilterSchema) SetCreatedAtLtNil() {
	o.CreatedAtLt.Set(nil)
}

// UnsetCreatedAtLt ensures that no value is present for CreatedAtLt, not even an explicit nil
func (o *ArchiveResultFilterSchema) UnsetCreatedAtLt() {
	o.CreatedAtLt.Unset()
}

func (o ArchiveResultFilterSchema) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArchiveResultFilterSchema) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Search.IsSet() {
		toSerialize["search"] = o.Search.Get()
	}
	if o.SnapshotId.IsSet() {
		toSerialize["snapshot_id"] = o.SnapshotId.Get()
	}
	if o.SnapshotUrl.IsSet() {
		toSerialize["snapshot_url"] = o.SnapshotUrl.Get()
	}
	if o.SnapshotTag.IsSet() {
		toSerialize["snapshot_tag"] = o.SnapshotTag.Get()
	}
	if o.Status.IsSet() {
		toSerialize["status"] = o.Status.Get()
	}
	if o.Output.IsSet() {
		toSerialize["output"] = o.Output.Get()
	}
	if o.Extractor.IsSet() {
		toSerialize["extractor"] = o.Extractor.Get()
	}
	if o.Cmd.IsSet() {
		toSerialize["cmd"] = o.Cmd.Get()
	}
	if o.Pwd.IsSet() {
		toSerialize["pwd"] = o.Pwd.Get()
	}
	if o.CmdVersion.IsSet() {
		toSerialize["cmd_version"] = o.CmdVersion.Get()
	}
	if o.CreatedAt.IsSet() {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if o.CreatedAtGte.IsSet() {
		toSerialize["created_at__gte"] = o.CreatedAtGte.Get()
	}
	if o.CreatedAtLt.IsSet() {
		toSerialize["created_at__lt"] = o.CreatedAtLt.Get()
	}
	return toSerialize, nil
}

type NullableArchiveResultFilterSchema struct {
	value *ArchiveResultFilterSchema
	isSet bool
}

func (v NullableArchiveResultFilterSchema) Get() *ArchiveResultFilterSchema {
	return v.value
}

func (v *NullableArchiveResultFilterSchema) Set(val *ArchiveResultFilterSchema) {
	v.value = val
	v.isSet = true
}

func (v NullableArchiveResultFilterSchema) IsSet() bool {
	return v.isSet
}

func (v *NullableArchiveResultFilterSchema) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArchiveResultFilterSchema(val *ArchiveResultFilterSchema) *NullableArchiveResultFilterSchema {
	return &NullableArchiveResultFilterSchema{value: val, isSet: true}
}

func (v NullableArchiveResultFilterSchema) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArchiveResultFilterSchema) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


